[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "Dylan Verheul", email = "dylan@dyve.net"},
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities",
]
dependencies = [
  "Django>=3.2",
  "beautifulsoup4>=4.8.0",
]
description = "Bootstrap 3 for Django"
dynamic = [
  "version",
]
license = "BSD-3-Clause"
name = "django-bootstrap3"
readme = "README.md"
requires-python = ">=3.7"

[project.urls]
Changelog = "https://github.com/zostera/django-bootstrap3/blob/main/CHANGELOG.md"
Documentation = "https://django-bootstrap3.readthedocs.io/"
Homepage = "https://github.com/zostera/django-bootstrap3"
Issues = "https://github.com/zostera/django-bootstrap3/issues"
Source = "https://github.com/zostera/django-bootstrap3"

[tool.hatch.version]
path = "src/bootstrap3/__about__.py"

[tool.hatch.build.targets.sdist]
include = [
  "/src",
]

[tool.hatch.build.targets.wheel]
packages = ["src/bootstrap3"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=7.2.6",
]
matrix-name-format = "dj{value}"

[tool.hatch.envs.default.scripts]
cov = [
  "test-cov",
  "cov-report",
]
cov-report = [
  "- coverage combine",
  "coverage report",
]
test = "python manage.py test {args:tests}"
test-cov = "coverage run manage.py test {args:tests}"

[[tool.hatch.envs.all.matrix]]
django = ["3.2"]
python = ["3.7"]

[[tool.hatch.envs.all.matrix]]
django = ["3.2", "4.1", "4.2"]
python = ["3.8", "3.9"]

[[tool.hatch.envs.all.matrix]]
django = ["3.2", "4.1", "4.2", "main"]
python = ["3.10"]

[[tool.hatch.envs.all.matrix]]
django = ["4.1", "4.2", "main"]
python = ["3.11"]

[tool.hatch.envs.all.overrides]
matrix.django.dependencies = [
  {value = "django~=3.2.0", if = ["3.2"]},
  {value = "django~=4.0.0", if = ["4.0"]},
  {value = "django~=4.1.0", if = ["4.1"]},
  {value = "django @ git+https://github.com/django/django.git", if = ["main"]},
]

[tool.hatch.envs.example]
dependencies = [
  "django>=3.2",
]
python = "3.11"
template = "example"

[tool.hatch.envs.example.scripts]
runserver = [
  "cd example && python manage.py migrate && python manage.py runserver",
]

[tool.hatch.envs.docs]
dependencies = [
  "sphinx>=7.0.1",
  "sphinx-mdinclude>=0.5.3",
  "furo>=2023.05.20",
]
python = "3.11"
template = "docs"

[tool.hatch.envs.docs.scripts]
build = [
  "clean",
  "cd docs && sphinx-build -b html -d _build/doctrees . _build/html",
]
clean = "rm -rf docs/_build"

[tool.hatch.envs.lint]
dependencies = [
  "black>=23.3.0",
  "ruff>=0.0.270",
]
detached = true

[tool.hatch.envs.lint.scripts]
all = [
  "style",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
style = [
  "black --check --diff {args:.}",
  "ruff {args:.}",
]

[tool.black]
line-length = 120
target_version = ["py37", "py38", "py39", "py310", "py311"]

[tool.ruff]
fix = false
fixable = [
  "I001", # isort (sorting)
  "F", # flake8
  "D", # docformatter
  "UP", # pyupgrade
]
ignore = [
  "D1", # D1: Missing docstring error codes (because not every function and class has a docstring)
  "D203", # D203: 1 blank line required before class docstring (conflicts with D211 and should be disabled, see https://github.com/PyCQA/pydocstyle/pull/91)
  "D212", # D212: Multi-line docstring summary should start at the first line
  "D301", # D301: Use r”“” if any backslashes in a docstring (unclear how else to handle backslashes in docstrings)
]
line-length = 120
select = [
  "D", # pydocstyle
  "E", # pycodestyle
  "F", # flake8
  "I", # isort
  "UP", # pyupgrade
]
src = ["src"]
target-version = "py37"
unfixable = [
  "F8", # names in flake8, such as defined but unused variables
]

[tool.ruff.isort]
known-first-party = ["bootstrap3", "app"]
known-third-party = ["django"]

[tool.coverage.run]
branch = true
parallel = true
source = ["src"]

[tool.coverage.paths]
package = ["src/bootstrap3", "*/django_bootstrap3/src/bootstrap3"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.sphinx.x-conf]
module = "bootstrap3"
