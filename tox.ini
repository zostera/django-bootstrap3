[tox]
isolated_build = True
envlist =
    lint
    docs
    py37-django{32}
    py38-django{32,41,42}
    py39-django{32,41,42}
    py310-django{32,41,42,main}
    py311-django{41,42,main}
    check-description
    check-manifest
    coverage

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39, lint, docs, check-description, check-manifest
    3.10: py310
    3.11: py311

[testenv]
allowlist_externals =
    make
setenv =
    PYTHONWARNINGS=once::DeprecationWarning
commands =
    coverage run --parallel-mode manage.py test -v1 --noinput
deps =
    django32: Django==3.2.*
    django41: Django==4.1.*
    django42: Django==4.2.*
    djangomain: https://github.com/django/django/archive/main.tar.gz
    coverage[toml]

[testenv:coverage]
depends =
    py37,py38,py39,py310,py311
commands =
    coverage combine
    coverage report

[testenv:lint]
commands =
    make lint
deps =
    -r{toxinidir}/requirements-dev.txt

[testenv:docs]
commands =
    make docs
deps =
    -r{toxinidir}/docs/requirements.txt

# Builds the package and runs 'twine check' to ensure it will render
# correctly when uploaded to the Python Package Index, or fail if not.
[testenv:check-description]
description = Check that the package description will render on the Python Package Index.
basepython = python3.9
changedir = {toxinidir}
skip_install = true
deps =
    twine
# In this environment, we need latest the pip, setuptools, and wheel.
commands_pre =
    {envpython} -m pip install -U pip setuptools wheel
commands =
    make check-description
# Runs check-manifest, a tool that builds the package and compares the
# files in the package to the files under version control, and fails
# if any version-controlled files do not end up in the package.
[testenv:check-manifest]
description = Check that the set of packaged files matches the set of version-controlled files.
basepython = python3.9
changedir = {toxinidir}
skip_install = true
deps =
    check-manifest
commands =
    make check-manifest
