[tox]
isolated_build = True
envlist =
    lint
    docs
    py37-django{22,32}
    py38-django{32,40,main}
    py39-django{32,40,main}
    py310-django{32,40,main}
    check-description
    check-manifest
    coverage

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39, lint, docs, check-description, check-manifest
    3.10: py310
    
[testenv]
whitelist_externals =
    make
setenv =
    PYTHONWARNINGS=all
commands_pre =
    {envpython} -m pip install --upgrade pip
commands =
    coverage run --parallel-mode manage.py test -v1 --noinput
deps =
    django22: Django==2.2.*
    django32: Django==3.2.*
    django40: Django==4.0.*
    djangomain: https://github.com/django/django/archive/main.tar.gz
    coverage[toml]
    coveralls

[testenv:coverage]
depends =
    py37,py38,py39,py310
commands =
    coverage combine
    coverage report
    
[testenv:lint]
commands =
    make lint
deps =
    -r{toxinidir}/requirements-dev.txt

[testenv:docs]
commands =
    make docs
deps =
    -r{toxinidir}/docs/requirements.txt

# Builds the package and runs 'twine check' to ensure it will render
# correctly when uploaded to the Python Package Index, or fail if not.
[testenv:check-description]
description = Check that the package description will render on the Python Package Index.
basepython = python3.9
changedir = {toxinidir}
skip_install = true
deps =
  twine
# In this environment we always want latest setuptools and wheel in addition to latest pip.
commands_pre =
  {envpython} -m pip install --upgrade pip setuptools wheel
commands =
  {envpython} -m pip wheel -w {envtmpdir}/build --no-deps .
  twine check {envtmpdir}/build/*

# Runs check-manifest, a tool that builds the package and compares the
# files in the package to the files under version control, and fails
# if any version-controlled files do not end up in the package.
[testenv:check-manifest]
description = Check that the set of packaged files matches the set of version-controlled files.
basepython = python3.9
changedir = {toxinidir}
skip_install = true
deps =
  check-manifest
commands =
  check-manifest --verbose

[flake8]
# flake8 does not support pyproject.toml, so we use tox.ini
# E731 do not assign a lambda expression
# W503 line break before binary operator (black introduces these)
# E203 whitespace before ':'
ignore = E731,W503,E203
exclude = .git,.tox,__pycache__
max-line-length = 120
